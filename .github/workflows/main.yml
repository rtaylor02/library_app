name: CI/CD to AWS Elastic Beanstalk

on: 
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
            | docker login --username AWS \
              --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and tag Docker images
        run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/javarchitect-library-app-backend:${GITHUB_SHA} ./backend/libraryapp
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/javarchitect-library-app-frontend:${GITHUB_SHA} ./frontend/react-library-app
          
      - name: Push Docker images
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/javarchitect-library-app-backend:${GITHUB_SHA}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/javarchitect-library-app-frontend:${GITHUB_SHA}

      - name: Update docker-compose.yml with new image tags
        run: |
          sed -i "s|javarchitect-library-app-backend:.*|javarchitect-library-app-backend:${GITHUB_SHA}|g" docker-compose.yml
          sed -i "s|javarchitect-library-app-frontend:.*|javarchitect-library-app-frontend:${GITHUB_SHA}|g" docker-compose.yml

      - name: Package Dockerrun for EB
        run: |
          #mkdir -p deploy
          #cp docker-compose.yml deploy/
          #cd deploy
          zip -r deploy-${GITHUB_SHA}.zip docker-compose.yml

      - name: Upload to S3
        run: |
          aws s3 cp deploy-${GITHUB_SHA}.zip s3://elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}/

      - name: Deploy to Elastic Beanstalk
        run: |
          EB_APP="JavaRchitect-library-app"
          EB_ENV="JavaRchitect-library-env"

          # Create new app version
          aws elasticbeanstalk create-application-version \
            --application-name $EB_APP \
            --version-label $GITHUB_SHA \
            --source-bundle S3Bucket="elasticbeanstalk-${{ secrets.AWS_REGION }}-${{ secrets.AWS_ACCOUNT_ID }}",S3Key="deploy-${GITHUB_SHA}.zip"

          # Update or create environment
          if aws elasticbeanstalk describe-environments --application-name $EB_APP --environment-names $EB_ENV | grep -q '"Status":'; then
            echo "Updating existing environment..."
            aws elasticbeanstalk update-environment \
              --application-name $EB_APP \
              --environment-name $EB_ENV \
              --version-label $GITHUB_SHA
          else
            echo "Creating new environment..."
            aws elasticbeanstalk create-environment \
              --application-name $EB_APP \
              --environment-name $EB_ENV \
              --solution-stack-name "64bit Amazon Linux 2023 v4.6.3 running Docker" \
              --option-settings \
                  Namespace=aws:autoscaling:launchconfiguration,OptionName=InstanceType,Value=t3.small \
                  Namespace=aws:autoscaling:launchconfiguration,OptionName=IamInstanceProfile,Value=aws-elasticbeanstalk-ec2-role \
              --service-role aws-elasticbeanstalk-service-role \
              --version-label $GITHUB_SHA
          fi

